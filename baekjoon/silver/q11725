//  Created by gogowonji on 2022/04/28.
//

#include <iostream>
#include <vector>
using namespace std;

#define MAX 100001
int n;
vector<int> tree[MAX];
int parent[MAX];
bool visited[MAX];


void DFS(int v){
    visited[v] = true;
    
    for(int i = 0; i < tree[v].size(); i++){
        int next = tree[v][i];
        if(!visited[next]){
            parent[next] = v;
            DFS(next);
        }
    }
}

int main() {
    // insert code here...
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    
    cin >> n;
    
    for(int i = 0; i < n-1; i++){
        int a, b;
        cin >> a >> b;
        tree[a].push_back(b);
        tree[b].push_back(a);
        
    }
    
    DFS(1);
    
    for(int i = 2; i <= n; i++){
        cout << parent[i] << "\n";
    }
    
    
    
    return 0;
}
